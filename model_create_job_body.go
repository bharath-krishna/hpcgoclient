/*
HPC Portal - API

An interface for working with HPC clusters.

API version: 1.9.10-9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateJobBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateJobBody{}

// CreateJobBody struct for CreateJobBody
type CreateJobBody struct {
	Name string `json:"name"`
	Namespace string `json:"namespace"`
	Cluster Cluster `json:"cluster"`
	Description *string `json:"description,omitempty"`
	Image string `json:"image"`
	JobPriority *JobPriority `json:"job_priority,omitempty"`
	Workdir *string `json:"workdir,omitempty"`
	Command *string `json:"command,omitempty"`
	Interactive *bool `json:"interactive,omitempty"`
	Distributed *bool `json:"distributed,omitempty"`
	DistributedReplicas *int32 `json:"distributed_replicas,omitempty"`
	Gpus *int32 `json:"gpus,omitempty"`
	Cpus *int32 `json:"cpus,omitempty"`
	MemoryGb *int32 `json:"memory_gb,omitempty"`
	SharedMemoryGb *int32 `json:"shared_memory_gb,omitempty"`
	Pvcs []PVCs `json:"pvcs,omitempty"`
	Envs []EnvVar `json:"envs,omitempty"`
	Sysenvs []EnvVar `json:"sysenvs,omitempty"`
}

type _CreateJobBody CreateJobBody

// NewCreateJobBody instantiates a new CreateJobBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateJobBody(name string, namespace string, cluster Cluster, image string) *CreateJobBody {
	this := CreateJobBody{}
	this.Name = name
	this.Namespace = namespace
	this.Cluster = cluster
	var description string = ""
	this.Description = &description
	this.Image = image
	var workdir string = "/"
	this.Workdir = &workdir
	var command string = ""
	this.Command = &command
	var interactive bool = false
	this.Interactive = &interactive
	var distributed bool = false
	this.Distributed = &distributed
	var distributedReplicas int32 = 2
	this.DistributedReplicas = &distributedReplicas
	var gpus int32 = 0
	this.Gpus = &gpus
	var cpus int32 = 20
	this.Cpus = &cpus
	var memoryGb int32 = 200
	this.MemoryGb = &memoryGb
	var sharedMemoryGb int32 = 0
	this.SharedMemoryGb = &sharedMemoryGb
	return &this
}

// NewCreateJobBodyWithDefaults instantiates a new CreateJobBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateJobBodyWithDefaults() *CreateJobBody {
	this := CreateJobBody{}
	var description string = ""
	this.Description = &description
	var workdir string = "/"
	this.Workdir = &workdir
	var command string = ""
	this.Command = &command
	var interactive bool = false
	this.Interactive = &interactive
	var distributed bool = false
	this.Distributed = &distributed
	var distributedReplicas int32 = 2
	this.DistributedReplicas = &distributedReplicas
	var gpus int32 = 0
	this.Gpus = &gpus
	var cpus int32 = 20
	this.Cpus = &cpus
	var memoryGb int32 = 200
	this.MemoryGb = &memoryGb
	var sharedMemoryGb int32 = 0
	this.SharedMemoryGb = &sharedMemoryGb
	return &this
}

// GetName returns the Name field value
func (o *CreateJobBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateJobBody) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value
func (o *CreateJobBody) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *CreateJobBody) SetNamespace(v string) {
	o.Namespace = v
}

// GetCluster returns the Cluster field value
func (o *CreateJobBody) GetCluster() Cluster {
	if o == nil {
		var ret Cluster
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetClusterOk() (*Cluster, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *CreateJobBody) SetCluster(v Cluster) {
	o.Cluster = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateJobBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateJobBody) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateJobBody) SetDescription(v string) {
	o.Description = &v
}

// GetImage returns the Image field value
func (o *CreateJobBody) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *CreateJobBody) SetImage(v string) {
	o.Image = v
}

// GetJobPriority returns the JobPriority field value if set, zero value otherwise.
func (o *CreateJobBody) GetJobPriority() JobPriority {
	if o == nil || IsNil(o.JobPriority) {
		var ret JobPriority
		return ret
	}
	return *o.JobPriority
}

// GetJobPriorityOk returns a tuple with the JobPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetJobPriorityOk() (*JobPriority, bool) {
	if o == nil || IsNil(o.JobPriority) {
		return nil, false
	}
	return o.JobPriority, true
}

// HasJobPriority returns a boolean if a field has been set.
func (o *CreateJobBody) HasJobPriority() bool {
	if o != nil && !IsNil(o.JobPriority) {
		return true
	}

	return false
}

// SetJobPriority gets a reference to the given JobPriority and assigns it to the JobPriority field.
func (o *CreateJobBody) SetJobPriority(v JobPriority) {
	o.JobPriority = &v
}

// GetWorkdir returns the Workdir field value if set, zero value otherwise.
func (o *CreateJobBody) GetWorkdir() string {
	if o == nil || IsNil(o.Workdir) {
		var ret string
		return ret
	}
	return *o.Workdir
}

// GetWorkdirOk returns a tuple with the Workdir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetWorkdirOk() (*string, bool) {
	if o == nil || IsNil(o.Workdir) {
		return nil, false
	}
	return o.Workdir, true
}

// HasWorkdir returns a boolean if a field has been set.
func (o *CreateJobBody) HasWorkdir() bool {
	if o != nil && !IsNil(o.Workdir) {
		return true
	}

	return false
}

// SetWorkdir gets a reference to the given string and assigns it to the Workdir field.
func (o *CreateJobBody) SetWorkdir(v string) {
	o.Workdir = &v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *CreateJobBody) GetCommand() string {
	if o == nil || IsNil(o.Command) {
		var ret string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetCommandOk() (*string, bool) {
	if o == nil || IsNil(o.Command) {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *CreateJobBody) HasCommand() bool {
	if o != nil && !IsNil(o.Command) {
		return true
	}

	return false
}

// SetCommand gets a reference to the given string and assigns it to the Command field.
func (o *CreateJobBody) SetCommand(v string) {
	o.Command = &v
}

// GetInteractive returns the Interactive field value if set, zero value otherwise.
func (o *CreateJobBody) GetInteractive() bool {
	if o == nil || IsNil(o.Interactive) {
		var ret bool
		return ret
	}
	return *o.Interactive
}

// GetInteractiveOk returns a tuple with the Interactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetInteractiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Interactive) {
		return nil, false
	}
	return o.Interactive, true
}

// HasInteractive returns a boolean if a field has been set.
func (o *CreateJobBody) HasInteractive() bool {
	if o != nil && !IsNil(o.Interactive) {
		return true
	}

	return false
}

// SetInteractive gets a reference to the given bool and assigns it to the Interactive field.
func (o *CreateJobBody) SetInteractive(v bool) {
	o.Interactive = &v
}

// GetDistributed returns the Distributed field value if set, zero value otherwise.
func (o *CreateJobBody) GetDistributed() bool {
	if o == nil || IsNil(o.Distributed) {
		var ret bool
		return ret
	}
	return *o.Distributed
}

// GetDistributedOk returns a tuple with the Distributed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetDistributedOk() (*bool, bool) {
	if o == nil || IsNil(o.Distributed) {
		return nil, false
	}
	return o.Distributed, true
}

// HasDistributed returns a boolean if a field has been set.
func (o *CreateJobBody) HasDistributed() bool {
	if o != nil && !IsNil(o.Distributed) {
		return true
	}

	return false
}

// SetDistributed gets a reference to the given bool and assigns it to the Distributed field.
func (o *CreateJobBody) SetDistributed(v bool) {
	o.Distributed = &v
}

// GetDistributedReplicas returns the DistributedReplicas field value if set, zero value otherwise.
func (o *CreateJobBody) GetDistributedReplicas() int32 {
	if o == nil || IsNil(o.DistributedReplicas) {
		var ret int32
		return ret
	}
	return *o.DistributedReplicas
}

// GetDistributedReplicasOk returns a tuple with the DistributedReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetDistributedReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.DistributedReplicas) {
		return nil, false
	}
	return o.DistributedReplicas, true
}

// HasDistributedReplicas returns a boolean if a field has been set.
func (o *CreateJobBody) HasDistributedReplicas() bool {
	if o != nil && !IsNil(o.DistributedReplicas) {
		return true
	}

	return false
}

// SetDistributedReplicas gets a reference to the given int32 and assigns it to the DistributedReplicas field.
func (o *CreateJobBody) SetDistributedReplicas(v int32) {
	o.DistributedReplicas = &v
}

// GetGpus returns the Gpus field value if set, zero value otherwise.
func (o *CreateJobBody) GetGpus() int32 {
	if o == nil || IsNil(o.Gpus) {
		var ret int32
		return ret
	}
	return *o.Gpus
}

// GetGpusOk returns a tuple with the Gpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetGpusOk() (*int32, bool) {
	if o == nil || IsNil(o.Gpus) {
		return nil, false
	}
	return o.Gpus, true
}

// HasGpus returns a boolean if a field has been set.
func (o *CreateJobBody) HasGpus() bool {
	if o != nil && !IsNil(o.Gpus) {
		return true
	}

	return false
}

// SetGpus gets a reference to the given int32 and assigns it to the Gpus field.
func (o *CreateJobBody) SetGpus(v int32) {
	o.Gpus = &v
}

// GetCpus returns the Cpus field value if set, zero value otherwise.
func (o *CreateJobBody) GetCpus() int32 {
	if o == nil || IsNil(o.Cpus) {
		var ret int32
		return ret
	}
	return *o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetCpusOk() (*int32, bool) {
	if o == nil || IsNil(o.Cpus) {
		return nil, false
	}
	return o.Cpus, true
}

// HasCpus returns a boolean if a field has been set.
func (o *CreateJobBody) HasCpus() bool {
	if o != nil && !IsNil(o.Cpus) {
		return true
	}

	return false
}

// SetCpus gets a reference to the given int32 and assigns it to the Cpus field.
func (o *CreateJobBody) SetCpus(v int32) {
	o.Cpus = &v
}

// GetMemoryGb returns the MemoryGb field value if set, zero value otherwise.
func (o *CreateJobBody) GetMemoryGb() int32 {
	if o == nil || IsNil(o.MemoryGb) {
		var ret int32
		return ret
	}
	return *o.MemoryGb
}

// GetMemoryGbOk returns a tuple with the MemoryGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetMemoryGbOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryGb) {
		return nil, false
	}
	return o.MemoryGb, true
}

// HasMemoryGb returns a boolean if a field has been set.
func (o *CreateJobBody) HasMemoryGb() bool {
	if o != nil && !IsNil(o.MemoryGb) {
		return true
	}

	return false
}

// SetMemoryGb gets a reference to the given int32 and assigns it to the MemoryGb field.
func (o *CreateJobBody) SetMemoryGb(v int32) {
	o.MemoryGb = &v
}

// GetSharedMemoryGb returns the SharedMemoryGb field value if set, zero value otherwise.
func (o *CreateJobBody) GetSharedMemoryGb() int32 {
	if o == nil || IsNil(o.SharedMemoryGb) {
		var ret int32
		return ret
	}
	return *o.SharedMemoryGb
}

// GetSharedMemoryGbOk returns a tuple with the SharedMemoryGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetSharedMemoryGbOk() (*int32, bool) {
	if o == nil || IsNil(o.SharedMemoryGb) {
		return nil, false
	}
	return o.SharedMemoryGb, true
}

// HasSharedMemoryGb returns a boolean if a field has been set.
func (o *CreateJobBody) HasSharedMemoryGb() bool {
	if o != nil && !IsNil(o.SharedMemoryGb) {
		return true
	}

	return false
}

// SetSharedMemoryGb gets a reference to the given int32 and assigns it to the SharedMemoryGb field.
func (o *CreateJobBody) SetSharedMemoryGb(v int32) {
	o.SharedMemoryGb = &v
}

// GetPvcs returns the Pvcs field value if set, zero value otherwise.
func (o *CreateJobBody) GetPvcs() []PVCs {
	if o == nil || IsNil(o.Pvcs) {
		var ret []PVCs
		return ret
	}
	return o.Pvcs
}

// GetPvcsOk returns a tuple with the Pvcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetPvcsOk() ([]PVCs, bool) {
	if o == nil || IsNil(o.Pvcs) {
		return nil, false
	}
	return o.Pvcs, true
}

// HasPvcs returns a boolean if a field has been set.
func (o *CreateJobBody) HasPvcs() bool {
	if o != nil && !IsNil(o.Pvcs) {
		return true
	}

	return false
}

// SetPvcs gets a reference to the given []PVCs and assigns it to the Pvcs field.
func (o *CreateJobBody) SetPvcs(v []PVCs) {
	o.Pvcs = v
}

// GetEnvs returns the Envs field value if set, zero value otherwise.
func (o *CreateJobBody) GetEnvs() []EnvVar {
	if o == nil || IsNil(o.Envs) {
		var ret []EnvVar
		return ret
	}
	return o.Envs
}

// GetEnvsOk returns a tuple with the Envs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetEnvsOk() ([]EnvVar, bool) {
	if o == nil || IsNil(o.Envs) {
		return nil, false
	}
	return o.Envs, true
}

// HasEnvs returns a boolean if a field has been set.
func (o *CreateJobBody) HasEnvs() bool {
	if o != nil && !IsNil(o.Envs) {
		return true
	}

	return false
}

// SetEnvs gets a reference to the given []EnvVar and assigns it to the Envs field.
func (o *CreateJobBody) SetEnvs(v []EnvVar) {
	o.Envs = v
}

// GetSysenvs returns the Sysenvs field value if set, zero value otherwise.
func (o *CreateJobBody) GetSysenvs() []EnvVar {
	if o == nil || IsNil(o.Sysenvs) {
		var ret []EnvVar
		return ret
	}
	return o.Sysenvs
}

// GetSysenvsOk returns a tuple with the Sysenvs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJobBody) GetSysenvsOk() ([]EnvVar, bool) {
	if o == nil || IsNil(o.Sysenvs) {
		return nil, false
	}
	return o.Sysenvs, true
}

// HasSysenvs returns a boolean if a field has been set.
func (o *CreateJobBody) HasSysenvs() bool {
	if o != nil && !IsNil(o.Sysenvs) {
		return true
	}

	return false
}

// SetSysenvs gets a reference to the given []EnvVar and assigns it to the Sysenvs field.
func (o *CreateJobBody) SetSysenvs(v []EnvVar) {
	o.Sysenvs = v
}

func (o CreateJobBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateJobBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["namespace"] = o.Namespace
	toSerialize["cluster"] = o.Cluster
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["image"] = o.Image
	if !IsNil(o.JobPriority) {
		toSerialize["job_priority"] = o.JobPriority
	}
	if !IsNil(o.Workdir) {
		toSerialize["workdir"] = o.Workdir
	}
	if !IsNil(o.Command) {
		toSerialize["command"] = o.Command
	}
	if !IsNil(o.Interactive) {
		toSerialize["interactive"] = o.Interactive
	}
	if !IsNil(o.Distributed) {
		toSerialize["distributed"] = o.Distributed
	}
	if !IsNil(o.DistributedReplicas) {
		toSerialize["distributed_replicas"] = o.DistributedReplicas
	}
	if !IsNil(o.Gpus) {
		toSerialize["gpus"] = o.Gpus
	}
	if !IsNil(o.Cpus) {
		toSerialize["cpus"] = o.Cpus
	}
	if !IsNil(o.MemoryGb) {
		toSerialize["memory_gb"] = o.MemoryGb
	}
	if !IsNil(o.SharedMemoryGb) {
		toSerialize["shared_memory_gb"] = o.SharedMemoryGb
	}
	if !IsNil(o.Pvcs) {
		toSerialize["pvcs"] = o.Pvcs
	}
	if !IsNil(o.Envs) {
		toSerialize["envs"] = o.Envs
	}
	if !IsNil(o.Sysenvs) {
		toSerialize["sysenvs"] = o.Sysenvs
	}
	return toSerialize, nil
}

func (o *CreateJobBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"namespace",
		"cluster",
		"image",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateJobBody := _CreateJobBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateJobBody)

	if err != nil {
		return err
	}

	*o = CreateJobBody(varCreateJobBody)

	return err
}

type NullableCreateJobBody struct {
	value *CreateJobBody
	isSet bool
}

func (v NullableCreateJobBody) Get() *CreateJobBody {
	return v.value
}

func (v *NullableCreateJobBody) Set(val *CreateJobBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateJobBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateJobBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateJobBody(val *CreateJobBody) *NullableCreateJobBody {
	return &NullableCreateJobBody{value: val, isSet: true}
}

func (v NullableCreateJobBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateJobBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


