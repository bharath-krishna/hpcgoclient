/*
HPC Portal - API

An interface for working with HPC clusters.

API version: 1.9.10-9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaginationMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginationMetadata{}

// PaginationMetadata struct for PaginationMetadata
type PaginationMetadata struct {
	Start *int32 `json:"start,omitempty"`
	End *int32 `json:"end,omitempty"`
	Count *int32 `json:"count,omitempty"`
	RemainingItemCount *int32 `json:"remaining_item_count,omitempty"`
}

// NewPaginationMetadata instantiates a new PaginationMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationMetadata() *PaginationMetadata {
	this := PaginationMetadata{}
	var start int32 = 0
	this.Start = &start
	var end int32 = 15
	this.End = &end
	var count int32 = 15
	this.Count = &count
	var remainingItemCount int32 = 0
	this.RemainingItemCount = &remainingItemCount
	return &this
}

// NewPaginationMetadataWithDefaults instantiates a new PaginationMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationMetadataWithDefaults() *PaginationMetadata {
	this := PaginationMetadata{}
	var start int32 = 0
	this.Start = &start
	var end int32 = 15
	this.End = &end
	var count int32 = 15
	this.Count = &count
	var remainingItemCount int32 = 0
	this.RemainingItemCount = &remainingItemCount
	return &this
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *PaginationMetadata) GetStart() int32 {
	if o == nil || IsNil(o.Start) {
		var ret int32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationMetadata) GetStartOk() (*int32, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *PaginationMetadata) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int32 and assigns it to the Start field.
func (o *PaginationMetadata) SetStart(v int32) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *PaginationMetadata) GetEnd() int32 {
	if o == nil || IsNil(o.End) {
		var ret int32
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationMetadata) GetEndOk() (*int32, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *PaginationMetadata) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given int32 and assigns it to the End field.
func (o *PaginationMetadata) SetEnd(v int32) {
	o.End = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *PaginationMetadata) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationMetadata) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *PaginationMetadata) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *PaginationMetadata) SetCount(v int32) {
	o.Count = &v
}

// GetRemainingItemCount returns the RemainingItemCount field value if set, zero value otherwise.
func (o *PaginationMetadata) GetRemainingItemCount() int32 {
	if o == nil || IsNil(o.RemainingItemCount) {
		var ret int32
		return ret
	}
	return *o.RemainingItemCount
}

// GetRemainingItemCountOk returns a tuple with the RemainingItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationMetadata) GetRemainingItemCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RemainingItemCount) {
		return nil, false
	}
	return o.RemainingItemCount, true
}

// HasRemainingItemCount returns a boolean if a field has been set.
func (o *PaginationMetadata) HasRemainingItemCount() bool {
	if o != nil && !IsNil(o.RemainingItemCount) {
		return true
	}

	return false
}

// SetRemainingItemCount gets a reference to the given int32 and assigns it to the RemainingItemCount field.
func (o *PaginationMetadata) SetRemainingItemCount(v int32) {
	o.RemainingItemCount = &v
}

func (o PaginationMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginationMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.RemainingItemCount) {
		toSerialize["remaining_item_count"] = o.RemainingItemCount
	}
	return toSerialize, nil
}

type NullablePaginationMetadata struct {
	value *PaginationMetadata
	isSet bool
}

func (v NullablePaginationMetadata) Get() *PaginationMetadata {
	return v.value
}

func (v *NullablePaginationMetadata) Set(val *PaginationMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationMetadata(val *PaginationMetadata) *NullablePaginationMetadata {
	return &NullablePaginationMetadata{value: val, isSet: true}
}

func (v NullablePaginationMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


