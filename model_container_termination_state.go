/*
HPC Portal - API

An interface for working with HPC clusters.

API version: 1.9.10-9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ContainerTerminationState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerTerminationState{}

// ContainerTerminationState struct for ContainerTerminationState
type ContainerTerminationState struct {
	StartedAt NullableTime `json:"started_at"`
	FinishedAt NullableTime `json:"finished_at"`
	ExitCode NullableInt32 `json:"exit_code"`
	Signal NullableInt32 `json:"signal"`
	Message NullableString `json:"message"`
	Reason NullableString `json:"reason"`
}

type _ContainerTerminationState ContainerTerminationState

// NewContainerTerminationState instantiates a new ContainerTerminationState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerTerminationState(startedAt NullableTime, finishedAt NullableTime, exitCode NullableInt32, signal NullableInt32, message NullableString, reason NullableString) *ContainerTerminationState {
	this := ContainerTerminationState{}
	this.StartedAt = startedAt
	this.FinishedAt = finishedAt
	this.ExitCode = exitCode
	this.Signal = signal
	this.Message = message
	this.Reason = reason
	return &this
}

// NewContainerTerminationStateWithDefaults instantiates a new ContainerTerminationState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerTerminationStateWithDefaults() *ContainerTerminationState {
	this := ContainerTerminationState{}
	return &this
}

// GetStartedAt returns the StartedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ContainerTerminationState) GetStartedAt() time.Time {
	if o == nil || o.StartedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.StartedAt.Get()
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerTerminationState) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAt.Get(), o.StartedAt.IsSet()
}

// SetStartedAt sets field value
func (o *ContainerTerminationState) SetStartedAt(v time.Time) {
	o.StartedAt.Set(&v)
}

// GetFinishedAt returns the FinishedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ContainerTerminationState) GetFinishedAt() time.Time {
	if o == nil || o.FinishedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.FinishedAt.Get()
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerTerminationState) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.FinishedAt.Get(), o.FinishedAt.IsSet()
}

// SetFinishedAt sets field value
func (o *ContainerTerminationState) SetFinishedAt(v time.Time) {
	o.FinishedAt.Set(&v)
}

// GetExitCode returns the ExitCode field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ContainerTerminationState) GetExitCode() int32 {
	if o == nil || o.ExitCode.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ExitCode.Get()
}

// GetExitCodeOk returns a tuple with the ExitCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerTerminationState) GetExitCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExitCode.Get(), o.ExitCode.IsSet()
}

// SetExitCode sets field value
func (o *ContainerTerminationState) SetExitCode(v int32) {
	o.ExitCode.Set(&v)
}

// GetSignal returns the Signal field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ContainerTerminationState) GetSignal() int32 {
	if o == nil || o.Signal.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Signal.Get()
}

// GetSignalOk returns a tuple with the Signal field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerTerminationState) GetSignalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Signal.Get(), o.Signal.IsSet()
}

// SetSignal sets field value
func (o *ContainerTerminationState) SetSignal(v int32) {
	o.Signal.Set(&v)
}

// GetMessage returns the Message field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ContainerTerminationState) GetMessage() string {
	if o == nil || o.Message.Get() == nil {
		var ret string
		return ret
	}

	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerTerminationState) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// SetMessage sets field value
func (o *ContainerTerminationState) SetMessage(v string) {
	o.Message.Set(&v)
}

// GetReason returns the Reason field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ContainerTerminationState) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}

	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerTerminationState) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// SetReason sets field value
func (o *ContainerTerminationState) SetReason(v string) {
	o.Reason.Set(&v)
}

func (o ContainerTerminationState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerTerminationState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["started_at"] = o.StartedAt.Get()
	toSerialize["finished_at"] = o.FinishedAt.Get()
	toSerialize["exit_code"] = o.ExitCode.Get()
	toSerialize["signal"] = o.Signal.Get()
	toSerialize["message"] = o.Message.Get()
	toSerialize["reason"] = o.Reason.Get()
	return toSerialize, nil
}

func (o *ContainerTerminationState) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"started_at",
		"finished_at",
		"exit_code",
		"signal",
		"message",
		"reason",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContainerTerminationState := _ContainerTerminationState{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContainerTerminationState)

	if err != nil {
		return err
	}

	*o = ContainerTerminationState(varContainerTerminationState)

	return err
}

type NullableContainerTerminationState struct {
	value *ContainerTerminationState
	isSet bool
}

func (v NullableContainerTerminationState) Get() *ContainerTerminationState {
	return v.value
}

func (v *NullableContainerTerminationState) Set(val *ContainerTerminationState) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerTerminationState) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerTerminationState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerTerminationState(val *ContainerTerminationState) *NullableContainerTerminationState {
	return &NullableContainerTerminationState{value: val, isSet: true}
}

func (v NullableContainerTerminationState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerTerminationState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


